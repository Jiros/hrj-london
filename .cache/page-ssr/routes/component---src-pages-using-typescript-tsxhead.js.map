{"version":3,"file":"component---src-pages-using-typescript-tsxhead.js","mappings":"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","sources":["webpack://HRJ London/./src/pages/using-typescript.tsx","webpack://HRJ London/./src/components/header.js","webpack://HRJ London/./src/components/layout.js","webpack://HRJ London/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    {/* <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <StaticImage\n      alt=\"Allen Goldstein logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"../images/allen-goldstein.png\"\n    /> */}\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            textAlign: 'center',\n            marginTop: `var(--space-6)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Goldstein Holdings\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","location","createElement","pathname","site","buildTime","href","to","Head","title","query","StaticImage","Header","siteTitle","style","margin","padding","display","alignItems","justifyContent","children","_data$site$siteMetada","staticQueryData","Fragment","siteMetadata","maxWidth","textAlign","marginTop","fontSize","Date","getFullYear","description","_site$siteMetadata","_site$siteMetadata2","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}