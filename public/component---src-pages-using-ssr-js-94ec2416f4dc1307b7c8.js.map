{"version":3,"file":"component---src-pages-using-ssr-js-94ec2416f4dc1307b7c8.js","mappings":"qKAgCA,MA5BeA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC3BE,EAAAA,cAAA,UACEC,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAkBV,ECoBX,MApCeR,IAAmB,IAADS,EAAA,IAAjB,SAAEC,GAAUV,EAC1B,MAAMW,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEV,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACW,EAAM,CAACZ,WAAiC,QAAtBQ,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAK,UAChDd,EAAAA,cAAA,OACEC,MAAO,CACLC,OAAO,SACPa,SAAS,sBACTZ,QAAQ,uBAGVH,EAAAA,cAAA,YAAOQ,GACPR,EAAAA,cAAA,UACEC,MAAO,CACLe,UAAW,SACXC,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,0BAG/B,C,+CCDP,IAlCA,SAAYtB,GAAoC,IAADuB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAET,EAAK,SAAEN,GAAUV,EAC3C,MAAM,KAAEc,IAASF,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApBJ,EAAGT,EAAKC,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmBP,MAExC,OACEd,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQyB,EAAkBX,EAAK,MAAMW,EAAiBX,GACtDd,EAAAA,cAAA,QAAM0B,KAAK,cAAcC,QAASH,IAClCxB,EAAAA,cAAA,QAAM4B,SAAS,WAAWD,QAASb,IACnCd,EAAAA,cAAA,QAAM4B,SAAS,iBAAiBD,QAASH,IACzCxB,EAAAA,cAAA,QAAM4B,SAAS,UAAUD,QAAQ,YACjC3B,EAAAA,cAAA,QAAM0B,KAAK,eAAeC,QAAQ,YAClC3B,EAAAA,cAAA,QAAM0B,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAV,EAAKC,oBAAY,IAAAS,OAAA,EAAjBA,EAAmBO,SAAM,KAC/D7B,EAAAA,cAAA,QAAM0B,KAAK,gBAAgBC,QAASb,IACpCd,EAAAA,cAAA,QAAM0B,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,6GCpCA,MA4BasB,EAAOA,IAAM9B,EAAAA,cAAC+B,EAAAA,EAAG,CAACjB,MAAM,cAErC,UA9BiBhB,IAAqB,IAApB,WAAEkC,GAAYlC,EAC9B,OACEE,EAAAA,cAACiC,EAAAA,EAAM,KACLjC,EAAAA,cAAA,UAAI,gBACWA,EAAAA,cAAA,SAAG,yBAElBA,EAAAA,cAAA,SAAG,mHAE4C,IAC7CA,EAAAA,cAAA,YAAM,yCAA4C,KAEpDA,EAAAA,cAAA,OACEC,MAAO,CAAEiC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,UAElBtC,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGuC,KAAK,oFAAmF,6CAEvF,KAGNvC,EAAAA,cAACwC,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://HRJ London/./src/components/header.js","webpack://HRJ London/./src/components/layout.js","webpack://HRJ London/./src/components/seo.js","webpack://HRJ London/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    {/* <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <StaticImage\n      alt=\"Allen Goldstein logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"../images/allen-goldstein.png\"\n    /> */}\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            textAlign: 'center',\n            marginTop: `var(--space-6)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Goldstein Holdings\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["_ref","siteTitle","React","style","margin","padding","display","alignItems","justifyContent","_data$site$siteMetada","children","data","useStaticQuery","Header","site","siteMetadata","title","maxWidth","textAlign","marginTop","fontSize","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","width","borderRadius","alt","src","message","href","Link","to"],"sourceRoot":""}