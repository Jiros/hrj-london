{"version":3,"file":"component---src-pages-using-typescript-tsx-8c32384034214d93b45a.js","mappings":"mMAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACDF,EAAA,OACCH,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAA,UAAI,mBACcA,EAAAA,cAAA,SAAG,0BAErBA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,cAAiB,oBACxDA,EAAAA,cAAA,YAAM,cAAiB,gBAAaA,EAAAA,cAAA,YAAM,YAAe,UAEnEA,EAAAA,cAAA,SAAG,gCAC4BA,EAAAA,cAAA,YAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECVX,MA5BeT,IAAA,IAAC,UAAEU,GAAWV,EAAA,OAC3BH,EAAAA,cAAA,UACEc,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAkBV,ECoBX,MApCehB,IAAmB,IAADiB,EAAA,IAAjB,SAAEC,GAAUlB,EAC1B,MAAMC,GAAOkB,EAAAA,EAAAA,gBAAe,cAU5B,OACEtB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACuB,EAAM,CAACV,WAAiC,QAAtBO,EAAAhB,EAAKI,KAAKgB,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBlB,QAAK,UAChDF,EAAAA,cAAA,OACEc,MAAO,CACLC,OAAO,SACPU,SAAS,sBACTT,QAAQ,uBAGVhB,EAAAA,cAAA,YAAOqB,GACPrB,EAAAA,cAAA,UACEc,MAAO,CACLY,UAAW,SACXC,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,0BAG/B,C,+CCDP,IAlCA,SAAY3B,GAAoC,IAAD4B,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAE/B,EAAK,SAAEmB,GAAUlB,EAC3C,MAAM,KAAEK,IAASc,EAAAA,EAAAA,gBAAe,YAc1BY,EAAkBD,GAAezB,EAAKgB,aAAaS,YACnDE,EAAgC,QAApBJ,EAAGvB,EAAKgB,oBAAY,IAAAO,OAAA,EAAjBA,EAAmB7B,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQmC,EAAkBjC,EAAK,MAAMiC,EAAiBjC,GACtDF,EAAAA,cAAA,QAAMoC,KAAK,cAAcC,QAASH,IAClClC,EAAAA,cAAA,QAAMsC,SAAS,WAAWD,QAASnC,IACnCF,EAAAA,cAAA,QAAMsC,SAAS,iBAAiBD,QAASH,IACzClC,EAAAA,cAAA,QAAMsC,SAAS,UAAUD,QAAQ,YACjCrC,EAAAA,cAAA,QAAMoC,KAAK,eAAeC,QAAQ,YAClCrC,EAAAA,cAAA,QAAMoC,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAxB,EAAKgB,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmBO,SAAM,KAC/DvC,EAAAA,cAAA,QAAMoC,KAAK,gBAAgBC,QAASnC,IACpCF,EAAAA,cAAA,QAAMoC,KAAK,sBAAsBC,QAASH,IACzCb,EAGP,C","sources":["webpack://HRJ London/./src/pages/using-typescript.tsx","webpack://HRJ London/./src/components/header.js","webpack://HRJ London/./src/components/layout.js","webpack://HRJ London/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    {/* <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <StaticImage\n      alt=\"Allen Goldstein logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"../images/allen-goldstein.png\"\n    /> */}\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            textAlign: 'center',\n            marginTop: `var(--space-6)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Goldstein Holdings\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","style","margin","padding","display","alignItems","justifyContent","_data$site$siteMetada","children","useStaticQuery","Header","siteMetadata","maxWidth","textAlign","marginTop","fontSize","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}